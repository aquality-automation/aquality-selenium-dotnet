trigger:
- master

pool:
  vmImage: 'windows-latest'
  
variables:
  buildConfiguration: 'Release'

stages:
- stage: test

  jobs:
  - job: sonar
    displayName: Analyze code with SonarQube

    steps:
    - task: SonarCloudPrepare@3
      displayName: 'Prepare SonarCloud analysis'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'aqualityautomation'
        scannerMode: 'dotnet'
        projectKey: 'aquality-automation_aquality-selenium-dotnet'
        projectName: 'aquality-selenium-dotnet'
        projectVersion: '$(Build.BuildNumber)'
        extraProperties: 'sonar.coverage.exclusions=**/**'
          
    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: Aquality.Selenium/Aquality.Selenium.sln
        arguments: -c $(buildConfiguration)      

    - task: SonarCloudAnalyze@3
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
      displayName: 'Run SonarCloud code analysis'
      continueOnError: true

    - task: SonarCloudPublish@3
      displayName: 'Publish SonarCloud quality gate results'
      inputs:
        pollingTimeoutSec: '300'

  - job: tests
    displayName: Run tests

    variables:
      profile: 'azure'

    steps:        
    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      retryCountOnTaskFailure: 1
      inputs:
        command: 'test'
        projects: '**/*Tests*/*.csproj'
        arguments: -c $(buildConfiguration)
        publishTestResults: true

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  jobs:
  - job: release
    displayName: 'Create tag on GitHub and publish NuGet package'

    steps:
    - task: gitversion/setup@0
      displayName: 'Install GitTools'
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      inputs:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'
       
    - script: dotnet pack Aquality.Selenium\Aquality.Selenium.sln -c $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersion) -o $(Build.ArtifactStagingDirectory)
      displayName: 'Pack to NuGet package'

    - task: GitHubRelease@1
      displayName: 'Create tag on GitHub'
      inputs:
        gitHubConnection: 'github.com_aqualityautomation'
        repositoryName: 'aquality-automation/aquality-selenium-dotnet'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'userSpecifiedTag'
        tag: 'v$(GitVersion.NuGetVersion)'
        isDraft: contains(variables['GitVersion.NuGetVersion'], '-')
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'

    - task: NuGetCommand@2
      displayName: 'Push NuGet package'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Aquality.Selenium*.nupkg;!$(Build.ArtifactStagingDirectory)/**/Aquality.Selenium*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'NuGet'
